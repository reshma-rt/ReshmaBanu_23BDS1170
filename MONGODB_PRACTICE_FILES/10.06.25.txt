#Delete Single Document

package connection;
import org.bson.Document;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoIterable;
import com.mongodb.client.model.Filters;
import com.mongodb.client.FindIterable;

public class Delete {

    public static void main(String[] args) {
        MongoClient client = MongoClients.create("mongodb://localhost:27017");
        MongoDatabase db = client.getDatabase("myDb");
        MongoCollection<Document> coll = db.getCollection("sampleCollection");

        coll.deleteOne(Filters.eq("First_Name", "Mahesh"));
        System.out.println("Single Document Removed");
        System.out.println("--- Remaining Documents ---");

        for (Document doc : coll.find()) {
            System.out.println(doc.toJson());
        }
    }
}




-----------------------------------------------------------------------------------------------------------
#Delete Multiple Documents

package connection;
import org.bson.Document;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoIterable;
import com.mongodb.client.model.Filters;
import com.mongodb.client.FindIterable;

public class Delete {

    public static void main(String[] args) {
        MongoClient client = MongoClients.create("mongodb://localhost:27017");
        MongoDatabase db = client.getDatabase("operators");
        MongoCollection<Document> sales = db.getCollection("sales");

        sales.deleteMany(Filters.eq("item", "Cappuccino"));
        System.out.println("All Matching Items Removed");
        System.out.println("=== Current Collection ===");

        for (Document entry : sales.find()) {
            System.out.println(entry.toJson());
        }
    }
}

------------------------------------------------------------------------------

# Limit Results to 2

package connection;
import org.bson.Document;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoIterable;
import com.mongodb.client.model.Filters;
import com.mongodb.client.FindIterable;

public class Delete {

    public static void main(String[] args) {
        MongoClient client = MongoClients.create("mongodb://localhost:27017");
        MongoDatabase db = client.getDatabase("operators");
        MongoCollection<Document> sales = db.getCollection("sales");

        FindIterable<Document> limitedDocs = sales.find().limit(2);

        for (Document record : limitedDocs) {
            System.out.println(record.toJson());
        }
    }
}


-----------------------------------------------------------------------------------

#Sort Documents by First_Name

package connection;
import org.bson.Document;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoIterable;
import com.mongodb.client.model.Filters;
import com.mongodb.client.FindIterable;

public class Sorting {

    public static void main(String[] args) {
        MongoClient client = MongoClients.create("mongodb://localhost:27017");
        MongoDatabase db = client.getDatabase("myDb");
        MongoCollection<Document> collection = db.getCollection("sampleCollection");

        BasicDBObject sortByName = new BasicDBObject("First_Name", 1);
        FindIterable<Document> sortedList = collection.find().sort(sortByName);

        for (Document doc : sortedList) {
            System.out.println(doc.toJson());
        }
    }
}


