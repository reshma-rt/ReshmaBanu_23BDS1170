#Price Range Query

package connection;

import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.FindIterable;

import org.bson.Document;

import static com.mongodb.client.model.Filters.*;

public class Operatoins {

    public static void main(String[] args) {
        MongoClient client = MongoClients.create("mongodb://localhost:27017");
        MongoDatabase db = client.getDatabase("myDb");
        MongoCollection<Document> products = db.getCollection("products");

        FindIterable<Document> items = products.find(and(gt("price", 700), lt("price", 900)));

        for (Document product : items) {
            System.out.println(product.toJson());
        }
    }
}
    


-----------------------------------------------------------------------------------------
#Average Price Calculation

package connection;

import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;

import org.bson.Document;

public class Operatoins {

    public static void main(String[] args) {
        MongoClient client = MongoClients.create("mongodb://localhost:27017");
        MongoDatabase db = client.getDatabase("myDb");
        MongoCollection<Document> products = db.getCollection("products");

        int sum = 0;
        int itemsCount = 0;

        for (Document item : products.find()) {
            Integer itemPrice = item.getInteger("price");
            if (itemPrice != null) {
                sum += itemPrice;
                itemsCount++;
            }
        }

        if (itemsCount > 0) {
            System.out.println("Average Price: " + (sum / itemsCount));
        } else {
            System.out.println("No products with price found.");
        }
    }
}
